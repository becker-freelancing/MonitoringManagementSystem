package com.jabasoft.mms.documentmanagement.domain.model;

import static org.junit.jupiter.api.Assertions.*;

import java.util.stream.Stream;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

class FileTypeTest {

	@ParameterizedTest
	@MethodSource("getMappings")
	void testMappingsAreCorrect(FileType fileType, String expectedEnding) {

		assertEquals(expectedEnding, fileType.getFileEnding());
	}

	@Test
	void testAllFileTypesAreMapped(){

		long testedFileMappingCounts = getMappings().count();

		assertEquals(FileType.values().length, testedFileMappingCounts);
	}

	static Stream<Arguments> getMappings(){
		return Stream.of(
			Arguments.of(FileType.PP, "pp"),
			Arguments.of(FileType.CSS, "css"),
			Arguments.of(FileType.CSV, "csv"),
			Arguments.of(FileType.PY, "py"),
			Arguments.of(FileType.WSF, "wsf"),
			Arguments.of(FileType.HS, "hs"),
			Arguments.of(FileType.OST, "ost"),
			Arguments.of(FileType.MIDI, "midi"),
			Arguments.of(FileType.EXE, "exe"),
			Arguments.of(FileType.JAVA, "java"),
			Arguments.of(FileType.NIM, "nim"),
			Arguments.of(FileType.BAT, "bat"),
			Arguments.of(FileType.MOV, "mov"),
			Arguments.of(FileType.XML, "xml"),
			Arguments.of(FileType.JAR, "jar"),
			Arguments.of(FileType.ADOC, "adoc"),
			Arguments.of(FileType.SCM, "scm"),
			Arguments.of(FileType.ZIP, "zip"),
			Arguments.of(FileType.OTF, "otf"),
			Arguments.of(FileType.CLJ, "clj"),
			Arguments.of(FileType.EXS, "exs"),
			Arguments.of(FileType.RAR, "rar"),
			Arguments.of(FileType._7Z, "7z"),
			Arguments.of(FileType.MPG, "mpg"),
			Arguments.of(FileType.TEX, "tex"),
			Arguments.of(FileType.PNG, "png"),
			Arguments.of(FileType.AI, "ai"),
			Arguments.of(FileType.TORRENT, "torrent"),
			Arguments.of(FileType.EPS, "eps"),
			Arguments.of(FileType.RA, "ra"),
			Arguments.of(FileType.CDR, "cdr"),
			Arguments.of(FileType.RB, "rb"),
			Arguments.of(FileType.DWF, "dwf"),
			Arguments.of(FileType.GROOVY, "groovy"),
			Arguments.of(FileType.SLN, "sln"),
			Arguments.of(FileType.DWG, "dwg"),
			Arguments.of(FileType.DOC, "doc"),
			Arguments.of(FileType.ACCDB, "accdb"),
			Arguments.of(FileType.ODP, "odp"),
			Arguments.of(FileType.RM, "rm"),
			Arguments.of(FileType.ODT, "odt"),
			Arguments.of(FileType.AIF, "aif"),
			Arguments.of(FileType.ODS, "ods"),
			Arguments.of(FileType.RS, "rs"),
			Arguments.of(FileType.JL, "jl"),
			Arguments.of(FileType.OTHER, "other"),
			Arguments.of(FileType.LOG, "log"),
			Arguments.of(FileType.VBS, "vbs"),
			Arguments.of(FileType.JSP, "jsp"),
			Arguments.of(FileType.FLAC, "flac"),
			Arguments.of(FileType.JS, "js"),
			Arguments.of(FileType.MID, "mid"),
			Arguments.of(FileType.VMDK, "vmdk"),
			Arguments.of(FileType.WMA, "wma"),
			Arguments.of(FileType.KML, "kml"),
			Arguments.of(FileType.DART, "dart"),
			Arguments.of(FileType.FCP, "fcp"),
			Arguments.of(FileType.SH, "sh"),
			Arguments.of(FileType.PGN, "pgn"),
			Arguments.of(FileType.EPUB, "epub"),
			Arguments.of(FileType.JPEG, "jpeg"),
			Arguments.of(FileType.MOBI, "mobi"),
			Arguments.of(FileType.RKT, "rkt"),
			Arguments.of(FileType.KEY, "key"),
			Arguments.of(FileType.ERL, "erl"),
			Arguments.of(FileType.XLSX, "xlsx"),
			Arguments.of(FileType.WMV, "wmv"),
			Arguments.of(FileType.MAT, "mat"),
			Arguments.of(FileType.C, "c"),
			Arguments.of(FileType.RTF, "rtf"),
			Arguments.of(FileType.SVG, "svg"),
			Arguments.of(FileType.CFG, "cfg"),
			Arguments.of(FileType.MAX, "max"),
			Arguments.of(FileType.TGZ, "tgz"),
			Arguments.of(FileType.F, "f"),
			Arguments.of(FileType.H, "h"),
			Arguments.of(FileType.HPP, "hpp"),
			Arguments.of(FileType.KT, "kt"),
			Arguments.of(FileType.CFM, "cfm"),
			Arguments.of(FileType.M, "m"),
			Arguments.of(FileType.DOCX, "docx"),
			Arguments.of(FileType.TC, "tc"),
			Arguments.of(FileType.CS, "cs"),
			Arguments.of(FileType.TXT, "txt"),
			Arguments.of(FileType.FLV, "flv"),
			Arguments.of(FileType.R, "r"),
			Arguments.of(FileType.DPROJ, "dproj"),
			Arguments.of(FileType.PPT, "ppt"),
			Arguments.of(FileType.V, "v"),
			Arguments.of(FileType.PHP, "php"),
			Arguments.of(FileType.VDI, "vdi"),
			Arguments.of(FileType.ASM, "asm"),
			Arguments.of(FileType.PYC, "pyc"),
			Arguments.of(FileType.DB, "db"),
			Arguments.of(FileType.ASP, "asp"),
			Arguments.of(FileType.TS, "ts"),
			Arguments.of(FileType.MSG, "msg"),
			Arguments.of(FileType.SWF, "swf"),
			Arguments.of(FileType.BMP, "bmp"),
			Arguments.of(FileType.ISO, "iso"),
			Arguments.of(FileType.SCSS, "scss"),
			Arguments.of(FileType.NUMBERS, "numbers"),
			Arguments.of(FileType.PROJECT, "project"),
			Arguments.of(FileType.VHDL, "vhdl"),
			Arguments.of(FileType.OGG, "ogg"),
			Arguments.of(FileType.TIF, "tif"),
			Arguments.of(FileType.DV, "dv"),
			Arguments.of(FileType.PAGES, "pages"),
			Arguments.of(FileType.MA, "ma"),
			Arguments.of(FileType.MB, "mb"),
			Arguments.of(FileType.VCXPROJ, "vcxproj"),
			Arguments.of(FileType.MD, "md"),
			Arguments.of(FileType.ASPX, "aspx"),
			Arguments.of(FileType.VEG, "veg"),
			Arguments.of(FileType.MKV, "mkv"),
			Arguments.of(FileType.HTML, "html"),
			Arguments.of(FileType.OGV, "ogv"),
			Arguments.of(FileType.SWIFT, "swift"),
			Arguments.of(FileType.ML, "ml"),
			Arguments.of(FileType.YAML, "yaml"),
			Arguments.of(FileType.CPP, "cpp"),
			Arguments.of(FileType.PAS, "pas"),
			Arguments.of(FileType.TAR, "tar"),
			Arguments.of(FileType.SQLITE, "sqlite"),
			Arguments.of(FileType.LISP, "lisp"),
			Arguments.of(FileType.MDB, "mdb"),
			Arguments.of(FileType.FCPX, "fcpx"),
			Arguments.of(FileType.LESS, "less"),
			Arguments.of(FileType.MLI, "mli"),
			Arguments.of(FileType.VB, "vb"),
			Arguments.of(FileType.PPTX, "pptx"),
			Arguments.of(FileType.EX, "ex"),
			Arguments.of(FileType.MPEG, "mpeg"),
			Arguments.of(FileType.PSD, "psd"),
			Arguments.of(FileType.TIFF, "tiff"),
			Arguments.of(FileType.GIF, "gif"),
			Arguments.of(FileType.AIFF, "aiff"),
			Arguments.of(FileType.SCALA, "scala"),
			Arguments.of(FileType.BLEND, "blend"),
			Arguments.of(FileType.PRPROJ, "prproj"),
			Arguments.of(FileType.FOR, "for"),
			Arguments.of(FileType.AEP, "aep"),
			Arguments.of(FileType.FS, "fs"),
			Arguments.of(FileType.SQL, "sql"),
			Arguments.of(FileType.XSL, "xsl"),
			Arguments.of(FileType.PST, "pst"),
			Arguments.of(FileType.AVI, "avi"),
			Arguments.of(FileType.YML, "yml"),
			Arguments.of(FileType.BZ2, "bz2"),
			Arguments.of(FileType.M4A, "m4a"),
			Arguments.of(FileType.TCL, "tcl"),
			Arguments.of(FileType.HTM, "htm"),
			Arguments.of(FileType.JPG, "jpg"),
			Arguments.of(FileType.TTF, "ttf"),
			Arguments.of(FileType.GO, "go"),
			Arguments.of(FileType.WAV, "wav"),
			Arguments.of(FileType.MP4, "mp4"),
			Arguments.of(FileType.CBP, "cbp"),
			Arguments.of(FileType.MP3, "mp3"),
			Arguments.of(FileType.PDF, "pdf"),
			Arguments.of(FileType.VHD, "vhd"),
			Arguments.of(FileType.GZ, "gz"),
			Arguments.of(FileType.COFFEE, "coffee"),
			Arguments.of(FileType.LUA, "lua"),
			Arguments.of(FileType.PUB, "pub"),
			Arguments.of(FileType.PL, "pl"),
			Arguments.of(FileType.F90, "f90"),
			Arguments.of(FileType.XLS, "xls"),
			Arguments.of(FileType.DMG, "dmg")
		);
	}
}